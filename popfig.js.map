{"version":3,"sources":["popfig.ts"],"names":[],"mappings":";AAAA,8BAA4B,iBAC5B,CAAC,CAD4C;AAG7C;IA+BI,gBAAY,QAA+B;QAA/B,wBAA+B,GAA/B,eAA+B;QAHnC,mBAAc,GAAmB,IAAI,6BAAa,EAAE,CAAC;QAIzD,EAAE,CAAA,CAAC,QAAQ,CAAC;YAAC,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;QAE5C,IAAI,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC;QACrG,EAAE,CAAA,CAAC,SAAS,CAAC,CAAA,CAAC;YACV,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAChE,CAAC;IACL,CAAC;IA1BG,mBAAY,GAAnB,UAAoB,GAAQ;QACtB,MAAM,CAAC,SAAS,GAAG,GAAG,CAAC;IAC1B,CAAC;IACM,wBAAiB,GAAxB,UAAyB,QAAwB;QAC7C,MAAM,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC;IAEM,kBAAW,GAAlB;QACI,EAAE,CAAA,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA,CAAC;YACjB,MAAM,CAAC,QAAQ,GAAG,IAAI,MAAM,EAAE,CAAC;QACnC,CAAC;QACD,MAAM,CAAE,MAAM,CAAC,QAAQ,CAAC;IAC5B,CAAC;IACM,aAAM,GAAb,UAAc,YAAmB;QAC7B,MAAM,CAAC,IAAI,UAAU,CAAC,YAAY,EAAE,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;IAC9D,CAAC;IAaD,+BAAc,GAAd,UAAe,YAAmB;QAC9B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAA,CAAC,IAAE,OAAA,CAAC,CAAC,YAAY,KAAK,YAAY,EAA/B,CAA+B,CAAE,CAAC;IAC5E,CAAC;IACD,2BAAU,GAAV,UAAW,EAAS;QAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QACzC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAA,CAAC,IAAE,OAAA,CAAC,CAAC,EAAE,KAAK,EAAE,EAAX,CAAW,CAAC,CAAC;IACrD,CAAC;IA7CM,gBAAS,GAAO;QACnB,WAAW,EAAE,EAAE,GAAG,EAAE,KAAK,EAAC;QAC1B,SAAS,EAAE,EAAE,GAAG,EAAE,KAAK,EAAC;KAC3B,CAAA;IACM,oBAAa,GAAQ;QACxB,KAAK,EAAE,OAAO;QACd,OAAO,EAAE,SAAS;QAClB,QAAQ,EAAE,UAAU;KACvB,CAAA;IAsCL,aAAC;AAAD,CA/CA,AA+CC,IAAA;AA/CY,cAAM,SA+ClB,CAAA;AAED;IAEI,oBAAoB,SAAgB,EAAU,MAAc;QAAxC,cAAS,GAAT,SAAS,CAAO;QAAU,WAAM,GAAN,MAAM,CAAQ;QACxD,IAAI,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QACvC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;IACvB,CAAC;IACD,yBAAI,GAAJ,UAAK,IAAW;QACZ,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;IAC3B,CAAC;IACD,yBAAI,GAAJ;QACI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;IACpB,CAAC;IACL,iBAAC;AAAD,CAZA,AAYC,IAAA;AAZY,kBAAU,aAYtB,CAAA","file":"popfig.js","sourcesContent":["import {PopfigBrowser} from \"./popfigbrowser\"\r\nimport {DeviceStrategy} from \"./devicestrategy\"\r\n\r\nexport class Popfig {\r\n    static configMap:any = {\r\n        \"localhost\": { env: \"dev\"},\r\n        \"default\": { env: \"dev\"}\r\n    }\r\n    static SERVICE_TYPES: any = {\r\n        DELTA: \"DELTA\",\r\n        STORAGE: \"STORAGE\",\r\n        TRACKING: \"TRACKING\"\r\n    }\r\n    \r\n    static instance: Popfig;\r\n\tstatic setConfigMap(map: any){\r\n       Popfig.configMap = map;\r\n    }\r\n    static setDeviceStrategy(strategy: DeviceStrategy){\r\n        Popfig.instance = new Popfig(strategy);\r\n    }\r\n    \r\n    static getInstance(): Popfig{\r\n        if(!Popfig.instance){\r\n            Popfig.instance = new Popfig();\r\n        }\r\n        return  Popfig.instance;\r\n    }\r\n    static urlfor(service_type:string): UrlBuilder{\r\n        return new UrlBuilder(service_type, Popfig.getInstance());\r\n    }\r\n    private deviceStrategy: DeviceStrategy = new PopfigBrowser();\r\n    \r\n    private config: any;\r\n    constructor(strategy: DeviceStrategy = null){\r\n        if(strategy) this.deviceStrategy = strategy;\r\n        \r\n        var configMap = Popfig.configMap[this.deviceStrategy.host()] || Popfig.configMap[\"default\"] || \"dev\";\r\n        if(configMap){\r\n            this.config = this.deviceStrategy.readConfig(configMap.env);\r\n        }\r\n    }\r\n    \r\n    getServiceType(service_type:string): any {\r\n        return this.config.services.filter(x=>x.SERVICE_TYPE === service_type );\r\n    }\r\n    getService(id:string):any{\r\n        console.log(JSON.stringify(this.config));\r\n        return this.config.services.find(x=>x.id === id);\r\n    }\r\n}\r\n\r\nexport class UrlBuilder{\r\n    private url: string;\r\n    constructor(private serviceId:string, private popfig: Popfig){\r\n        var cfg = popfig.getService(serviceId);\r\n        this.url = cfg.URL;\r\n    }\r\n    path(path:string){\r\n        return this.url + path;\r\n    }\r\n    root(){\r\n        return this.url;\r\n    }\r\n}"],"sourceRoot":"/source/"}